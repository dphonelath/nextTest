{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/dphonelath/workspace/nextTest/components/Prices.js\";\nimport React from \"react\";\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'EUR'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = '';\n\n      if (this.state.currency === \"USD\") {\n        list = React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.USD.description, \" : \", React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, this.props.bpi.USD.code, \" \"), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, this.props.bpi.USD.rate));\n      } else if (this.state.currency === \"GBP\") {\n        list = React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \" : \", React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, this.props.bpi.GBP.code, \" \"), React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, this.props.bpi.GBP.rate));\n      } else if (this.state.currency === \"EUR\") list = React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \" : \", React.createElement(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.bpi.EUR.code, \" \"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.bpi.EUR.rate));\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, list), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            currency: e.target.value\n          });\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"USD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"USD\"), React.createElement(\"option\", {\n        value: \"GBP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"GBP\"), React.createElement(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"EUR\")));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/Users/dphonelath/workspace/nextTest/components/Prices.js"],"names":["Prices","currency","list","state","props","bpi","USD","description","code","rate","GBP","EUR","e","setState","target","value","React","Component"],"mappings":";;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;;6BAIA;AAAA;;AACJ,UAAIC,IAAI,GAAG,EAAX;;AAEA,UAAG,KAAKC,KAAL,CAAWF,QAAX,KAAwB,KAA3B,EAAiC;AAC7BC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACmB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WADtC,SACqD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IAA1D,MADrD,EAC4H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IAA5B,CAD5H,CAAP;AAGH,OAJD,MAIM,IAAG,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA3B,EAAiC;AACnCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACmB,KAAKE,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WADtC,SACqD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IAA1D,MADrD,EAC4H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IAA5B,CAD5H,CAAP;AAGH,OAJK,MAIA,IAAG,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA3B,EACFC,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACmB,KAAKE,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WADtC,SACqD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IAA1D,MADrD,EAC4H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IAA5B,CAD5H,CAAP;;AAGJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAQ,QAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,iBAAG,MAAI,CAACC,QAAL,CAAc;AAACZ,YAAAA,QAAQ,EAAEW,CAAC,CAACE,MAAF,CAASC;AAApB,WAAd,CAAH;AAAA,SAAnB;AACA,QAAA,SAAS,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CALJ,CADJ;AAcH;;;;EAlCgBC,KAAK,CAACC,S;;AAqC3B,eAAejB,MAAf","sourcesContent":["class Prices extends React.Component {\n    state = {\n        currency: 'EUR'\n    }\n\n    render(){\n        let list = '';\n\n        if(this.state.currency === \"USD\"){\n            list = <li className=\"list-group-item\">\n                    Bitcoin rate for {this.props.bpi.USD.description} : <span className=\"badge badge-primary\">{this.props.bpi.USD.code} </span><strong>{this.props.bpi.USD.rate}</strong>\n                    </li>\n        }else if(this.state.currency === \"GBP\"){\n            list = <li className=\"list-group-item\">\n                    Bitcoin rate for {this.props.bpi.GBP.description} : <span className=\"badge badge-primary\">{this.props.bpi.GBP.code} </span><strong>{this.props.bpi.GBP.rate}</strong>\n                    </li>\n        }else if(this.state.currency === \"EUR\")\n            list = <li className=\"list-group-item\">\n                    Bitcoin rate for {this.props.bpi.EUR.description} : <span className=\"badge badge-primary\">{this.props.bpi.EUR.code} </span><strong>{this.props.bpi.EUR.rate}</strong>\n                    </li>\n        return (\n            <div>\n                <ul className=\"list-group\"> \n                    {list}\n                </ul>\n                <br/>\n                <select onChange={e =>this.setState({currency: e.target.value})}\n                className=\"form-control\">\n                    <option value=\"USD\">USD</option>\n                    <option value=\"GBP\">GBP</option>\n                    <option value=\"EUR\">EUR</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default Prices"]},"metadata":{},"sourceType":"module"}